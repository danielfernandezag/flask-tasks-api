{"version":3,"sources":["redux/reducers/tasksReducer.js","redux/reducers/index.js","redux/configureStore.js","redux/actions/tasksActions.js","redux/actions/index.js","components/NavBar.jsx","components/TaskForm.jsx","components/TaskItem.jsx","components/TaskList.jsx","components/App.jsx","index.js"],"names":["initialTasksState","tasks","filter","keyword","loading","selectedTask","getTasks","createSelector","state","task","done","name","toLowerCase","includes","content","getTasksDone","getTasksTodo","tasksState","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","id","map","combineReducers","fromTasks","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","reducer","applyMiddleware","thunk","url","selectTask","filterTasks","fetchTasks","dispatch","axios","get","mode","then","response","data","catch","error","console","fetchAddTask","post","fetchDeleteTask","delete","fetchToggleTaskDone","put","fetchUpdateTaskName","fetchUpdateTaskContent","fetchUpdateTaskDoneAll","toString","fetchDeleteTasksAll","storeActions","tasksActions","NavBar","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","search","onSearchChange","e","setState","target","value","props","onSubmit","preventDefault","inherits","createClass","key","_this$props","react_default","a","createElement","className","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","role","aria-haspopup","aria-labelledby","tabIndex","aria-disabled","onChange","placeholder","Component","defaultProps","title","log","mapDispatchToProps","connect","TaskForm","nameRef","React","createRef","contentRef","nameError","contentError","existsError","onNameChange","onContentChange","alreadyExists","find","current","focus","_this$state","htmlFor","ref","aria-describedby","TaskItem","class","TaskList","tasksDone","tasksTodo","components_TaskItem","App","prevProps","components_NavBar","components_TaskForm","style","width","height","components_TaskList","ReactDOM","render","es","store","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.73ffc45d.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst initialTasksState = {\r\n\ttasks: [],\r\n\tfilter: 'all',\r\n\tkeyword: '',\r\n\tloading: false,\r\n\tselectedTask: {}\r\n};\r\n\r\nexport const getTasks = createSelector(\r\n\tstate => state.tasks,\r\n\tstate => state.filter,\r\n\tstate => state.keyword,\r\n\t(tasks, filter, keyword) => {\r\n\t\tswitch (filter) {\r\n\t\t\tcase 'done':\r\n\t\t\t\treturn tasks.filter(task => task.done !== false);\r\n\t\t\tcase 'todo':\r\n\t\t\t\treturn tasks.filter(task => task.done !== true);\r\n\t\t\tcase 'search':\r\n\t\t\t\treturn tasks.filter(task => (task.name.toLowerCase().includes(keyword.toLowerCase()) || task.content.toLowerCase().includes(keyword.toLowerCase())) && task);\r\n\t\t\tcase 'all':\r\n\t\t\t\treturn tasks;\r\n\t\t\tdefault:\r\n\t\t\t\treturn tasks;\r\n\t\t}\r\n\t}\r\n);\r\n\r\nexport const getTasksDone = createSelector(\r\n\tstate => state.tasks,\r\n\ttasks => tasks.filter(task => task.done !== false)\r\n);\r\n\r\nexport const getTasksTodo = createSelector(\r\n\tstate => state.tasks,\r\n\ttasks => tasks.filter(task => task.done !== true)\r\n);\r\n\r\nconst tasksState = (state = initialTasksState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FETCH_LOADING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true\r\n\t\t\t};\r\n\t\tcase 'FETCH_DONE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: false\r\n\t\t\t};\r\n\t\tcase 'SET_TASKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: action.tasks\r\n\t\t\t};\r\n\t\tcase 'ADD_TASK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [...state.tasks, action.task]\r\n\t\t\t};\r\n\t\tcase 'DELETE_TASK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.filter(task => task.id !== action.id)\r\n\t\t\t};\r\n\t\tcase 'TOGGLE_TASK_DONE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(task => (task.id === action.id ? { ...task, done: action.done } : task))\r\n\t\t\t};\r\n\t\tcase 'UPDATE_TASK_NAME':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(task => (task.id === action.id ? { ...task, name: action.name } : task))\r\n\t\t\t};\r\n\t\tcase 'UPDATE_TASK_CONTENT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(task => (task.id === action.id ? { ...task, content: action.content } : task))\r\n\t\t\t};\r\n\t\tcase 'FILTER_TASKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilter: action.filter,\r\n\t\t\t\tkeyword: action.keyword\r\n\t\t\t};\r\n\t\tcase 'SELECT_TASK':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedTask: state.tasks.filter(task => task.id === action.id)\r\n\t\t\t};\r\n\t\tcase 'ALL_DONE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(task => ({ ...task, done: true }))\r\n\t\t\t};\r\n\t\tcase 'ALL_TODO':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: state.tasks.map(task => ({ ...task, done: false }))\r\n\t\t\t};\r\n\t\tcase 'DELETE_ALL_TASKS':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: [],\r\n\t\t\t\tfilter: 'all',\r\n\t\t\t\tkeyword: '',\r\n\t\t\t\tloading: false,\r\n\t\t\t\tselectedTask: {}\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default tasksState;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport tasksState, * as fromTasks from './tasksReducer';\r\n\r\nexport default combineReducers({\r\n\ttasksState\r\n});\r\n\r\nexport const getTasks = state => fromTasks.getTasks(state.tasksState);\r\nexport const getTasksTodo = state => fromTasks.getTasksTodo(state.tasksState);\r\nexport const getTasksDone = state => fromTasks.getTasksDone(state.tasksState);\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers/index';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // esta es para desarrollo activa el redux extension\r\n\r\nconst configureStore = () => {\r\n\t// return createStore(reducer);\r\n\treturn createStore(reducer, {}, composeEnhancers(applyMiddleware(thunk)));\r\n};\r\n\r\nexport default configureStore;\r\n","import axios from 'axios';\r\n\r\nconst url = 'http://192.168.1.116:5000/tasks';\r\n\r\n// REDUX CALLS\r\n\r\nconst fetchLoading = () => ({\r\n\ttype: 'FETCH_LOADING'\r\n});\r\n\r\nconst fetchDone = () => ({\r\n\ttype: 'FETCH_DONE'\r\n});\r\n\r\nconst setTasks = tasks => ({\r\n\ttype: 'SET_TASKS',\r\n\ttasks\r\n});\r\n\r\nconst addTask = task => ({\r\n\ttype: 'ADD_TASK',\r\n\ttask\r\n});\r\n\r\nconst deleteTask = task => ({\r\n\ttype: 'DELETE_TASK',\r\n\tid: task.id\r\n});\r\n\r\nconst toggleTaskDone = task => ({\r\n\ttype: 'TOGGLE_TASK_DONE',\r\n\tid: task.id,\r\n\tdone: task.done\r\n});\r\n\r\nconst updateTaskName = task => ({\r\n\ttype: 'UPDATE_TASK_NAME',\r\n\tid: task.id,\r\n\tname: task.name\r\n});\r\n\r\nconst updateTaskContent = task => ({\r\n\ttype: 'UPDATE_TASK_CONTENT',\r\n\tid: task.id,\r\n\tcontent: task.content\r\n});\r\n\r\nconst toggleAllDone = () => ({\r\n\ttype: 'ALL_DONE'\r\n});\r\n\r\nconst toggleAllTodo = () => ({\r\n\ttype: 'ALL_TODO'\r\n});\r\n\r\nconst deleteAllTasks = () => ({\r\n\ttype: 'DELETE_ALL_TASKS'\r\n});\r\n\r\nexport const selectTask = id => ({\r\n\ttype: 'SELECT_TASK',\r\n\tid\r\n});\r\n\r\nexport const filterTasks = (filter, keyword = '') => ({\r\n\ttype: 'FILTER_TASKS',\r\n\tfilter,\r\n\tkeyword\r\n});\r\n\r\n// API CALLS\r\n\r\nexport const fetchTasks = () => dispatch => {\r\n\tdispatch(fetchLoading());\r\n\taxios\r\n\t\t.get(url + '/all', { mode: 'cors' })\r\n\t\t.then(response => {\r\n\t\t\tdispatch(setTasks(response.data));\r\n\t\t\tdispatch(fetchDone());\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t\tdispatch(fetchDone());\r\n\t\t});\r\n};\r\n\r\nexport const fetchAddTask = (content, name) => dispatch => {\r\n\taxios\r\n\t\t.post(url, {\r\n\t\t\tname,\r\n\t\t\tcontent\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\tdispatch(addTask(response.data));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchDeleteTask = id => dispatch => {\r\n\taxios\r\n\t\t.delete(url + '/' + id)\r\n\t\t.then(response => {\r\n\t\t\tdispatch(deleteTask(response.data));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchToggleTaskDone = id => dispatch => {\r\n\taxios\r\n\t\t.put(url + '/done/' + id)\r\n\t\t.then(response => {\r\n\t\t\tdispatch(toggleTaskDone(response.data));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchUpdateTaskName = (id, name) => dispatch => {\r\n\taxios\r\n\t\t.put(url + '/name/' + id, {\r\n\t\t\tname\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\tdispatch(updateTaskName(response.data));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchUpdateTaskContent = (id, content) => dispatch => {\r\n\taxios\r\n\t\t.put(url + '/content/' + id, {\r\n\t\t\tcontent\r\n\t\t})\r\n\t\t.then(response => {\r\n\t\t\tdispatch(updateTaskContent(response.data));\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchUpdateTaskDoneAll = done => dispatch => {\r\n\taxios\r\n\t\t.put(url + '/done/all', {\r\n\t\t\tdone: done.toString()\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tif (done) {\r\n\t\t\t\tdispatch(toggleAllDone());\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(toggleAllTodo());\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n\r\nexport const fetchDeleteTasksAll = () => dispatch => {\r\n\taxios\r\n\t\t.delete(url + '/all')\r\n\t\t.then(() => {\r\n\t\t\tdispatch(deleteAllTasks());\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(error);\r\n\t\t});\r\n};\r\n","import * as tasksActions from './tasksActions';\r\n\r\nconst storeActions = {\r\n\t...tasksActions\r\n};\r\n\r\nexport default storeActions;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport storeActions from '../redux/actions/index';\r\n\r\nexport class NavBar extends Component {\r\n\tstate = {\r\n\t\tsearch: ''\r\n\t};\r\n\tonSearchChange = e =>\r\n\t\tthis.setState({ search: e.target.value }, () => {\r\n\t\t\tif (this.state.search === '') {\r\n\t\t\t\tthis.props.filterTasks('all');\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.filterTasks('search', this.state.search);\r\n\t\t\t}\r\n\t\t});\r\n\tonSubmit = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\trender() {\r\n\t\tconst { filterTasks, filter, fetchUpdateTaskDoneAll, fetchDeleteTasksAll } = this.props;\r\n\t\treturn (\r\n\t\t\t<nav className='navbar navbar-expand-lg navbar-dark text-white bg-dark'>\r\n\t\t\t\t<a className='navbar-brand' href={false}>\r\n\t\t\t\t\tTasks App\r\n\t\t\t\t</a>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='navbar-toggler'\r\n\t\t\t\t\ttype='button'\r\n\t\t\t\t\tdata-toggle='collapse'\r\n\t\t\t\t\tdata-target='#navbarSupportedContent'\r\n\t\t\t\t\taria-controls='navbarSupportedContent'\r\n\t\t\t\t\taria-expanded='false'\r\n\t\t\t\t\taria-label='Toggle navigation'>\r\n\t\t\t\t\t<span className='navbar-toggler-icon'></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n\t\t\t\t\t<ul className='navbar-nav mr-auto'>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<a className='nav-link' href={false} onClick={fetchDeleteTasksAll}>\r\n\t\t\t\t\t\t\t\tDelete All Tasks\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item dropdown'>\r\n\t\t\t\t\t\t\t<a className='nav-link dropdown-toggle' href={false} id='navbarDropdown' role='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false'>\r\n\t\t\t\t\t\t\t\t{filter === 'search' && <span>Filter Tasks</span>}\r\n\t\t\t\t\t\t\t\t{filter === 'all' && <span>Filter Tasks</span>}\r\n\t\t\t\t\t\t\t\t{filter === 'done' && <span>Done</span>}\r\n\t\t\t\t\t\t\t\t{filter === 'todo' && <span>To do</span>}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t<div className='dropdown-menu' aria-labelledby='navbarDropdown'>\r\n\t\t\t\t\t\t\t\t<a className='dropdown-item' href={false} onClick={() => filterTasks('all')}>\r\n\t\t\t\t\t\t\t\t\tAll\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a className='dropdown-item' href={false} onClick={() => filterTasks('done')}>\r\n\t\t\t\t\t\t\t\t\tDone\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a className='dropdown-item' href={false} onClick={() => filterTasks('todo')}>\r\n\t\t\t\t\t\t\t\t\tTo do\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<a className='nav-link' href={false} tabIndex='-1' aria-disabled='true' onClick={() => fetchUpdateTaskDoneAll(true)}>\r\n\t\t\t\t\t\t\t\tMark All As Done\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className='nav-item'>\r\n\t\t\t\t\t\t\t<a className='nav-link' href={false} tabIndex='-1' aria-disabled='true' onClick={() => fetchUpdateTaskDoneAll(false)}>\r\n\t\t\t\t\t\t\t\tMark All To Do\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<form className='form-inline my-2 my-lg-0' onSubmit={this.onSubmit}>\r\n\t\t\t\t\t\t<input className='form-control mr-sm-2' value={this.state.search} onChange={this.onSearchChange} name='search' type='search' placeholder='Search' aria-label='Search' />\r\n\t\t\t\t\t\t<button className='btn btn-outline-success my-2 my-sm-0' type='submit'>\r\n\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nNavBar.defaultProps = {\r\n\ttitle: 'Title',\r\n\tfilterTasks: () => console.log('no action provided'),\r\n\tfetchUpdateTaskDoneAll: () => console.log('no action provided'),\r\n\tfetchDeleteTasksAll: () => console.log('no action provided'),\r\n\tfilter: 'all'\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tfilter: state.tasksState.filter\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tfilterTasks: storeActions.filterTasks,\r\n\tfetchUpdateTaskDoneAll: storeActions.fetchUpdateTaskDoneAll,\r\n\tfetchDeleteTasksAll: storeActions.fetchDeleteTasksAll\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(NavBar);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport storeActions from '../redux/actions/index';\r\n\r\nexport class TaskForm extends Component {\r\n\tnameRef = React.createRef();\r\n\tcontentRef = React.createRef();\r\n\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tcontent: '',\r\n\t\tnameError: false,\r\n\t\tcontentError: false,\r\n\t\texistsError: false\r\n\t};\r\n\r\n\tonNameChange = e => this.setState({ name: e.target.value });\r\n\tonContentChange = e => this.setState({ content: e.target.value });\r\n\tonSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tconst alreadyExists = this.props.tasks.find(task => task.name === e.target.name.value);\r\n\t\tif (e.target.name.value !== '' && e.target.content.value !== '' && alreadyExists === undefined) {\r\n\t\t\tthis.setState({ nameError: false, contentError: false, existsError: false }, () => {\r\n\t\t\t\tthis.props.fetchAddTask(this.state.content, this.state.name);\r\n\t\t\t\tthis.setState({ name: '', content: '' }, this.nameRef.current.focus());\r\n\t\t\t});\r\n\t\t} else if (e.target.name.value === '') {\r\n\t\t\tthis.setState({ nameError: true, contentError: false, existsError: false }, this.nameRef.current.focus());\r\n\t\t} else if (e.target.content.value === '') {\r\n\t\t\tthis.setState({ nameError: false, contentError: true, existsError: false }, this.contentRef.current.focus());\r\n\t\t} else if (alreadyExists !== undefined) {\r\n\t\t\tthis.setState({ nameError: false, contentError: false, existsError: true, name: '' }, this.nameRef.current.focus());\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { name, content, nameError, contentError, existsError } = this.state;\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='task-input-name'>Task name</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.nameRef}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tid='task-input-name'\r\n\t\t\t\t\t\taria-describedby='task-name-help'\r\n\t\t\t\t\t\tplaceholder='name'\r\n\t\t\t\t\t\tonChange={this.onNameChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small id='task-name-help' className={`form-text ${nameError || existsError ? 'text-danger' : 'text-muted'}`}>\r\n\t\t\t\t\t\t{existsError ? 'task already exists' : 'add task name.'}\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t<label htmlFor='task-input-content'>Task content</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.contentRef}\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={content}\r\n\t\t\t\t\t\tname='content'\r\n\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\tid='task-input-content'\r\n\t\t\t\t\t\taria-describedby='task-content-help'\r\n\t\t\t\t\t\tplaceholder='content'\r\n\t\t\t\t\t\tonChange={this.onContentChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<small id='task-content-help' className={`form-text ${contentError ? 'text-danger' : 'text-muted'}`}>\r\n\t\t\t\t\t\tadd task content.\r\n\t\t\t\t\t</small>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button type='submit' className='btn btn-primary btn-block'>\r\n\t\t\t\t\tAdd\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTaskForm.defaultProps = {\r\n\tfetchAddTask: () => console.log('no action provided')\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchAddTask: storeActions.fetchAddTask\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(TaskForm);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport storeActions from '../redux/actions/index';\r\n\r\nexport class TaskItem extends Component {\r\n\trender() {\r\n\t\tconst { task, fetchToggleTaskDone, fetchDeleteTask } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className='card container'>\r\n\t\t\t\t<div className='card-body px-0'>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t\t\t<h5 className='card-title text-dark'>{task.name}</h5>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t\t\t<h6>\r\n\t\t\t\t\t\t\t\t\t<span class={`badge ${task.done ? 'badge-success' : 'badge-info'}`}>{task.done ? 'done' : 'todo'}</span>\r\n\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p className='card-text text-dark'>{task.content}</p>\r\n\t\t\t\t\t<div class='row'>\r\n\t\t\t\t\t\t<div class='col-sm'>\r\n\t\t\t\t\t\t\t<a href={false} className={`btn btn-sm ${task.done ? 'btn-success' : 'btn-info'} btn-block`} onClick={() => fetchToggleTaskDone(task.id)}>\r\n\t\t\t\t\t\t\t\t{task.done ? 'Not done' : 'Done'}\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class='col-sm'>\r\n\t\t\t\t\t\t\t<a href={false} className='btn btn-sm btn-danger btn-block' onClick={() => fetchDeleteTask(task.id)}>\r\n\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTaskItem.defaultProps = {\r\n\ttask: {\r\n\t\tname: 'mock task name',\r\n\t\tcontent: 'mock task content',\r\n\t\tdone: false\r\n\t},\r\n\tfetchToggleTaskDone: () => console.log('no action provided'),\r\n\tfetchDeleteTask: () => console.log('no action provided')\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchToggleTaskDone: storeActions.fetchToggleTaskDone,\r\n\tfetchDeleteTask: storeActions.fetchDeleteTask\r\n};\r\n\r\nexport default connect(\r\n\tnull,\r\n\tmapDispatchToProps\r\n)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTasks, getTasksTodo, getTasksDone } from '../redux/reducers/index';\r\nimport TaskItem from './TaskItem';\r\n\r\nexport class TaskList extends Component {\r\n\trender() {\r\n\t\tconst { type, tasks, tasksDone, tasksTodo } = this.props;\r\n\t\treturn (\r\n\t\t\t<ul className='list-group'>\r\n\t\t\t\t{type === 'all' &&\r\n\t\t\t\t\ttasks.map(task => (\r\n\t\t\t\t\t\t<li key={task.id} className='list-group-item px-0 py-0 mx-0'>\r\n\t\t\t\t\t\t\t<TaskItem task={task} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t{type === 'todo' &&\r\n\t\t\t\t\ttasksTodo.map(task => (\r\n\t\t\t\t\t\t<li key={task.id} className='list-group-item px-0 py-0 mx-0'>\r\n\t\t\t\t\t\t\t<TaskItem task={task} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t\t{type === 'done' &&\r\n\t\t\t\t\ttasksDone.map(task => (\r\n\t\t\t\t\t\t<li key={task.id} className='list-group-item px-0 py-0 mx-0'>\r\n\t\t\t\t\t\t\t<TaskItem task={task} />\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nTaskList.defaultProps = {\r\n\ttasks: [],\r\n\ttasksTodo: [],\r\n\ttasksDone: [],\r\n\ttype: 'all'\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\ttasks: getTasks(state),\r\n\ttasksTodo: getTasksTodo(state),\r\n\ttasksDone: getTasksDone(state)\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tnull\r\n)(TaskList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTasks, getTasksTodo, getTasksDone } from '../redux/reducers/index';\r\nimport storeActions from '../redux/actions/index';\r\nimport NavBar from './NavBar';\r\nimport TaskForm from './TaskForm';\r\nimport TaskList from './TaskList';\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.fetchTasks();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.tasks !== this.props.tasks && this.props.tasks.length > 0) {\r\n\t\t\tconst id = this.props.tasks[0].id;\r\n\t\t\tthis.props.selectTask(id);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { tasks, tasksDone, tasksTodo, filter, loading } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className='container-fluid px-0 mx-0'>\r\n\t\t\t\t<NavBar title='Tasks App' />\r\n\t\t\t\t<div className='row px-0 mx-0'>\r\n\t\t\t\t\t<div className='col-sm-2' />\r\n\t\t\t\t\t<div className='col-sm-8'>\r\n\t\t\t\t\t\t<div className='card '>\r\n\t\t\t\t\t\t\t<div className='card-header text-white bg-dark'>\r\n\t\t\t\t\t\t\t\t<TaskForm tasks={tasks} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='card-body text-white bg-dark'>\r\n\t\t\t\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class='spinner-grow text-primary mx-auto' style={{ width: '4rem', height: '4rem' }} role='status'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class='sr-only'>Loading...</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t\t\t\t\t{tasks.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-sm '>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='text-white'>{filter}</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TaskList type='all' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{tasksTodo.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-sm '>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='text-white'>To do</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TaskList type='todo' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t{tasksDone.length > 0 && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-sm'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='text-white'>Done</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TaskList type='done' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='col-sm-2' />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nApp.defaultProps = {\r\n\ttasks: [],\r\n\ttasksTodo: [],\r\n\ttasksDone: [],\r\n\tfilter: 'all',\r\n\tloading: true,\r\n\tfetchTasks: () => console.log('no action provided'),\r\n\tselectTask: () => console.log('no action provided')\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n\tfilter: state.tasksState.filter,\r\n\ttasks: getTasks(state),\r\n\ttasksTodo: getTasksTodo(state),\r\n\ttasksDone: getTasksDone(state),\r\n\tloading: state.tasksState.loading\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n\tfetchTasks: storeActions.fetchTasks,\r\n\tselectTask: storeActions.selectTask\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './redux/configureStore';\n// import 'bootstrap/dist/css/bootstrap.css';\nimport App from './components/App';\n\nReactDOM.render(\n\t<Provider store={configureStore()}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}